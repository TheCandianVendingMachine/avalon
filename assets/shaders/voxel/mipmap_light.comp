#version 430
layout(local_size_x = 8, local_size_y = 8, local_size_z = 8) in;

layout(location = 0, rgba32f) restrict writeonly uniform image3D mipmap;
layout(location = 1) uniform sampler3D lightVoxels;
layout(location = 2) uniform int level;

void main() {
    ivec3 pCoord = ivec3(gl_GlobalInvocationID);
    vec3 baseSize = vec3(textureSize(lightVoxels, level - 1));
    vec3 mipSize = vec3(imageSize(mipmap));

    ivec3 originalCoord = pCoord * ivec3(baseSize / mipSize);

    vec3 average = vec3(0.0);
    for (int xOffset = -1; xOffset <= 1; xOffset++) {
        for (int yOffset = -1; yOffset <= 1; yOffset++) {
            for (int zOffset = -1; zOffset <= 1; zOffset++) {
                ivec3 samplePos = originalCoord + ivec3(xOffset, yOffset, zOffset);
                if (any(lessThan(samplePos, ivec3(0))) || any(greaterThanEqual(samplePos, ivec3(baseSize)))) {
                    continue;
                }
                vec4 texel = texelFetch(lightVoxels, samplePos, level - 1);
                int weight = 1 + abs(xOffset) + abs(yOffset) + abs(zOffset);
                average += texel.rgb / (0.9375 * pow(2.0, weight));
            }
        }
    }

    imageStore(mipmap, pCoord, vec4(average, 1.0));
}
