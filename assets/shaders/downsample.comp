#version 430
layout(local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

layout(location = 0) uniform sampler2D original;
layout(location = 1) restrict writeonly uniform image2D downsampled;
layout(location = 2) uniform ivec2 originalSize;
layout(location = 3) uniform ivec2 newSize;

void main() {
    ivec2 pCoord = ivec2(gl_GlobalInvocationID.xy);
    if (any(greaterThanEqual(pCoord, newSize))) {
        return;
    }

    ivec2 scale = originalSize / newSize;
    ivec2 originalCoord = pCoord * scale;

    vec3 average = vec3(0.0);
    vec3 brightest = vec3(0.0);
    for (int xOffset = -1; xOffset <= 1; xOffset++) {
        for (int yOffset = -1; yOffset <= 1; yOffset++) {
            ivec2 samplePos = originalCoord + ivec2(xOffset, yOffset);
            if (any(lessThan(samplePos, ivec2(0))) || any(greaterThanEqual(samplePos, originalSize))) {
                samplePos = originalCoord;
            }
            int weight = 1 + abs(xOffset) + abs(yOffset);
            float denom = 2.0 * pow(2.0, weight);
            vec3 texel = texelFetch(original, samplePos, 0).rgb;
            average += texelFetch(original, samplePos, 0).rgb / denom;
            if (length(texel) > length(brightest)) {
                brightest = texel;
            }
        }
    }

    imageStore(downsampled, pCoord, vec4(brightest, 1.0));
}
